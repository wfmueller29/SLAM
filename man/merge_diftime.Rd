% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/merge_diftime.R
\name{merge_diftime}
\alias{merge_diftime}
\title{Merge Diftime}
\usage{
merge_diftime(
  data1,
  data2,
  id,
  age,
  threshold = Inf,
  vars = NULL,
  where = "both",
  suffixes = c(".1", ".2"),
  clean_vars = TRUE
)
}
\arguments{
\item{data1}{a dataframe that has the ids and ages of measurement that will
serve as a reference for matching with data2}

\item{data2}{a dataframe that has the ids and ages of measurement we would
like to match with the reference id's and dates and data1}

\item{id}{either a character string, or a character vector of length 2. If
the id variable in data1 and data2 have the same name, id is a character
string. If the id variable of data1 and data2 are different, then id is a
character vector, with the first value being the id variable of data1 and
the second being the id variable for data2.}

\item{age}{either a character string, or a character vector of length 2.
If the age variable in data1 and data2 have the same name, age is a character
string. If the age variable of data1 and data2 are different, then age is a
character vector, with the first value being the age variable of data1 and
the second being the age variable for data2.}

\item{threshold}{a numeric value that provides the difference in time
between measurements allowed. The numeric should be in the same units of
age.}

\item{vars}{optional character vector that provides the variable names for
which this should be applied over. If specified, for each variable specified
by var, only non-missing values will be considered when merging with the
closest measurement date.}

\item{where}{a character string that specifies where to look for the closest
observation in data2 relative to data1. "before" means that merge_diftime
will look before the reference observation in data1. "after" means the same
except after. "both" means that merge_ditime will match using observations
on either side of the reference observation in data1.}

\item{suffixes}{specifies the suffix for non-unique variables between the
two dataframes. However, even if the age and id variables are unique between
the two dataframes, they will be assigned a suffix.}

\item{clean_vars}{default is true. Will return all data1 columns and remove
any duplicate columns from data2 with the exception of the age column.}
}
\value{
a dataframe where each unique subject and age measurement in data1
is matched with the closest aged measurement for that subject in data2.
}
\description{
Functions that merges two dataframes that have measurements at different
ages. It matches the closest measurement in data2 before, after, or before
or after the measurement in data1. If a threshold is specified, it will
ensure the closest measurement falls within that threshold or it will set
it to missing.
}
\examples{

# Merging clostest NMR to Glucose ---------------------------------------------

if (requireNamespace("dplyr", quietly = TRUE)) {
  # Checkout data ------------------------------------------------------------
  # Checkout glucose
  head(gluc)

  # Checkout nmr
  head(nmr)

  # create age for merging and format data so it makes sense
  gluc <- dplyr::mutate(gluc,
    age_wk = difftime(date, dob, units = "weeks"),
    date = as.Date(date, "\%m\%d\%Y")
  )

  # Create nmr ---------------------------------------------------------------
  # create age for merging and format data so it makes sense
  nmr <- dplyr::mutate(nmr,
    age_wk = difftime(date, dob, units = "weeks"),
    date = as.Date(date, "\%m\%d\%Y")
  )

  # Use merge_diftime --------------------------------------------------------
  gluc_nmr <- merge_diftime(
    data1 = gluc,
    data2 = nmr,
    id = "idno",
    age = "age_wk",
    vars = c("bw", "lean", "fluid", "fat"),
    clean_vars = TRUE
  )

  # Checkout results
  head(gluc_nmr)
} else {
  message("Install dplyr to run this example")
}
}
\author{
William Mueller, Jorge Martinez Romero
}
